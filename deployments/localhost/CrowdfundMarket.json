{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "metaUrl",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "crowdfundContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "CrowdfundCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_goal",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metaUrl",
          "type": "string"
        }
      ],
      "name": "createCrowdfund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveFundraisers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metaUrl",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "crowdfundContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "goal",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrowdfundMarket.CrowdfundObj[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCrowdfund",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metaUrl",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "crowdfundContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "goal",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrowdfundMarket.CrowdfundObj",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyActiveFundraisers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metaUrl",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "crowdfundContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "goal",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrowdfundMarket.CrowdfundObj[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyCompletedFundraisers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metaUrl",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "crowdfundContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "goal",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrowdfundMarket.CrowdfundObj[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyFundraisers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "fundId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metaUrl",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "crowdfundContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "goal",
              "type": "uint256"
            }
          ],
          "internalType": "struct CrowdfundMarket.CrowdfundObj[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5ea67fa5ed1e2ca7a1a61cf6e5266d12d7b855f560ed9d6c4d8dfc38b6998be4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2480440",
    "logsBloom": "0x
    "blockHash": "0x88a12fc278e1924ba88f24b1d75ed2e50aa3694b716b43bc0522fc60ee7808ff",
    "transactionHash": "0x5ea67fa5ed1e2ca7a1a61cf6e5266d12d7b855f560ed9d6c4d8dfc38b6998be4",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2480440",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "58c57a912b1d781fba4028721bfaaeeb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"crowdfundContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"name\":\"CrowdfundCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metaUrl\",\"type\":\"string\"}],\"name\":\"createCrowdfund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveFundraisers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"crowdfundContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"internalType\":\"struct CrowdfundMarket.CrowdfundObj[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCrowdfund\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"crowdfundContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"internalType\":\"struct CrowdfundMarket.CrowdfundObj\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyActiveFundraisers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"crowdfundContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"internalType\":\"struct CrowdfundMarket.CrowdfundObj[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyCompletedFundraisers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"crowdfundContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"internalType\":\"struct CrowdfundMarket.CrowdfundObj[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyFundraisers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fundId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metaUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"crowdfundContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"internalType\":\"struct CrowdfundMarket.CrowdfundObj[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdfundMarket.sol\":\"CrowdfundMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/Crowdfund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nerror Cowdfund__GoalNotMet();\\nerror Crowdfund__NothingToWithdraw();\\nerror Crowdfund__TransferFailed();\\nerror Crowdfund__NotOwner();\\n\\ncontract Crowdfund {\\n  uint256 private immutable i_goal;\\n  bool private s_goalReached;\\n  uint256 private s_raised;\\n  address private s_crowdfundOwner;\\n\\n  mapping(address => uint256) private s_addressToContribution;\\n\\n  modifier onlyOwner() {\\n    if (msg.sender != s_crowdfundOwner) {\\n      revert Crowdfund__NotOwner();\\n    }\\n    _;\\n  }\\n\\n  constructor(uint256 _goal, address _creator) {\\n    i_goal = _goal;\\n    s_goalReached = false;\\n    s_raised = 0;\\n    s_crowdfundOwner = _creator;\\n  }\\n\\n  receive() external payable {\\n    donate();\\n  }\\n\\n  fallback() external payable {\\n    donate();\\n  }\\n\\n  function donate() public payable {\\n    s_addressToContribution[msg.sender] += msg.value;\\n    s_raised += msg.value;\\n    updateGoalStatus();\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    if (address(this).balance == 0) {\\n      revert Crowdfund__NothingToWithdraw();\\n    }\\n    (bool success, ) = payable(s_crowdfundOwner).call{value: address(this).balance}(\\\"\\\");\\n    if (!success) {\\n      revert Crowdfund__TransferFailed();\\n    }\\n  }\\n\\n  function updateGoalStatus() internal {\\n    if (address(this).balance < i_goal) {\\n      revert Cowdfund__GoalNotMet();\\n    }\\n    if (address(this).balance >= i_goal) {\\n      s_goalReached = true;\\n    }\\n  }\\n\\n  function checkIfContributor(address _checkAddress) public view returns (bool) {\\n    if (s_addressToContribution[_checkAddress] > 0) {\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /* GETTER FUNCTIONS */\\n  function getOwner() public view returns (address) {\\n    return s_crowdfundOwner;\\n  }\\n\\n  function getBalance() public view returns (uint256) {\\n    return address(this).balance;\\n  }\\n\\n  function getRaised() public view returns (uint256) {\\n    return s_raised;\\n  }\\n\\n  function getGoalReached() public view returns (bool) {\\n    return s_goalReached;\\n  }\\n\\n  function getContribution(address _contibutor) public view returns (uint256) {\\n    return s_addressToContribution[_contibutor];\\n  }\\n}\\n\",\"keccak256\":\"0xd285c0091181ae94d5578e38602c9a68850c88a027aa93382195458bc7719985\",\"license\":\"MIT\"},\"contracts/CrowdfundMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\nimport \\\"./Crowdfund.sol\\\";\\r\\n\\r\\ncontract CrowdfundMarket {\\r\\n  using Counters for Counters.Counter;\\r\\n  Counters.Counter private _funraiserIds;\\r\\n\\r\\n  struct CrowdfundObj {\\r\\n    uint256 fundId;\\r\\n    string metaUrl;\\r\\n    address crowdfundContract;\\r\\n    address owner;\\r\\n    uint256 goal;\\r\\n  }\\r\\n  mapping(uint256 => CrowdfundObj) private s_idToCrowdfund;\\r\\n  mapping(address => uint256) private s_addressToId;\\r\\n\\r\\n  event CrowdfundCreated(\\r\\n    uint indexed fundId,\\r\\n    string indexed metaUrl,\\r\\n    address indexed crowdfundContractAddress,\\r\\n    address owner,\\r\\n    uint256 goal\\r\\n  );\\r\\n\\r\\n  function createCrowdfund(uint _goal, string memory _metaUrl) public {\\r\\n    _funraiserIds.increment();\\r\\n    uint256 fundId = _funraiserIds.current();\\r\\n\\r\\n    Crowdfund crowdfundContract = new Crowdfund(_goal, msg.sender);\\r\\n    address crowdfundContractAddress = address(crowdfundContract);\\r\\n    s_addressToId[crowdfundContractAddress] = fundId;\\r\\n\\r\\n    s_idToCrowdfund[fundId] = CrowdfundObj(\\r\\n      fundId,\\r\\n      _metaUrl,\\r\\n      crowdfundContractAddress,\\r\\n      payable(msg.sender),\\r\\n      _goal\\r\\n    );\\r\\n\\r\\n    emit CrowdfundCreated(fundId, _metaUrl, crowdfundContractAddress, msg.sender, _goal);\\r\\n  }\\r\\n\\r\\n  function getCrowdfund(uint256 _id) public view returns (CrowdfundObj memory) {\\r\\n    return s_idToCrowdfund[_id];\\r\\n  }\\r\\n\\r\\n  function getActiveFundraisers() public view returns (CrowdfundObj[] memory) {\\r\\n    uint256 fundraisersCount = _funraiserIds.current();\\r\\n    uint256 fundraiserGoalsMet = 0;\\r\\n    bool goalReached;\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (goalReached) fundraiserGoalsMet++;\\r\\n    }\\r\\n\\r\\n    uint256 goalNotReachedCount = _funraiserIds.current() - fundraiserGoalsMet;\\r\\n    uint256 index = 0;\\r\\n\\r\\n    CrowdfundObj[] memory fundraisers = new CrowdfundObj[](goalNotReachedCount);\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (!goalReached) {\\r\\n        uint256 currentFundId = s_idToCrowdfund[i + 1].fundId;\\r\\n        CrowdfundObj storage currentCrowdfund = s_idToCrowdfund[currentFundId];\\r\\n        fundraisers[index] = currentCrowdfund;\\r\\n        index++;\\r\\n      }\\r\\n    }\\r\\n    return fundraisers;\\r\\n  }\\r\\n\\r\\n  function getMyFundraisers() public view returns (CrowdfundObj[] memory) {\\r\\n    uint256 fundraisersCount = _funraiserIds.current();\\r\\n    uint256 myFundraisersCount = 0;\\r\\n    uint256 index = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender) {\\r\\n        myFundraisersCount++;\\r\\n      }\\r\\n    }\\r\\n    CrowdfundObj[] memory fundraisers = new CrowdfundObj[](myFundraisersCount);\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender) {\\r\\n        uint256 currentFundId = s_idToCrowdfund[i + 1].fundId;\\r\\n        CrowdfundObj storage currentCrowdfund = s_idToCrowdfund[currentFundId];\\r\\n        fundraisers[index] = currentCrowdfund;\\r\\n        index++;\\r\\n      }\\r\\n    }\\r\\n    return fundraisers;\\r\\n  }\\r\\n\\r\\n  function getMyActiveFundraisers() public view returns (CrowdfundObj[] memory) {\\r\\n    uint256 fundraisersCount = _funraiserIds.current();\\r\\n    uint256 myActiveFundraisersCount = 0;\\r\\n    bool goalReached;\\r\\n    uint256 index = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender && !goalReached) {\\r\\n        myActiveFundraisersCount++;\\r\\n      }\\r\\n    }\\r\\n    CrowdfundObj[] memory fundraisers = new CrowdfundObj[](myActiveFundraisersCount);\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender && !goalReached) {\\r\\n        uint256 currentFundId = s_idToCrowdfund[i + 1].fundId;\\r\\n        CrowdfundObj storage currentCrowdfund = s_idToCrowdfund[currentFundId];\\r\\n        fundraisers[index] = currentCrowdfund;\\r\\n        index++;\\r\\n      }\\r\\n    }\\r\\n    return fundraisers;\\r\\n  }\\r\\n\\r\\n  function getMyCompletedFundraisers() public view returns (CrowdfundObj[] memory) {\\r\\n    uint256 fundraisersCount = _funraiserIds.current();\\r\\n    uint256 myCompletedFundraisersCount = 0;\\r\\n    bool goalReached;\\r\\n    uint256 index = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender && goalReached) {\\r\\n        myCompletedFundraisersCount++;\\r\\n      }\\r\\n    }\\r\\n    CrowdfundObj[] memory fundraisers = new CrowdfundObj[](myCompletedFundraisersCount);\\r\\n\\r\\n    for (uint256 i = 0; i < fundraisersCount; i++) {\\r\\n      Crowdfund contractInstance = Crowdfund(payable(s_idToCrowdfund[i + 1].crowdfundContract));\\r\\n      goalReached = contractInstance.getGoalReached();\\r\\n      if (s_idToCrowdfund[i + 1].owner == msg.sender && goalReached) {\\r\\n        uint256 currentFundId = s_idToCrowdfund[i + 1].fundId;\\r\\n        CrowdfundObj storage currentCrowdfund = s_idToCrowdfund[currentFundId];\\r\\n        fundraisers[index] = currentCrowdfund;\\r\\n        index++;\\r\\n      }\\r\\n    }\\r\\n    return fundraisers;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x16d5714f63b00fbb9b2bc6ce8289b3163ab1bab45a7c5ccb4dcb7867bc60539b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612c18806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80632ede90fb146200006f5780636ec3db8214620000915780639f2c113b14620000c7578063d7f2013f14620000e7578063e9a0bfcb1462000109578063f6ceedaf146200012b575b600080fd5b620000796200014d565b60405162000088919062001a50565b60405180910390f35b620000af6004803603810190620000a9919062001ab9565b620004ec565b604051620000be919062001b6b565b60405180910390f35b620000e56004803603810190620000df919062001ce0565b62000675565b005b620000f1620008ae565b60405162000100919062001a50565b60405180910390f35b6200011362000de7565b60405162000122919062001a50565b60405180910390f35b620001356200131e565b60405162000144919062001a50565b60405180910390f35b606060006200015d600062001779565b905060008060005b838110156200020d573373ffffffffffffffffffffffffffffffffffffffff166001600060018462000198919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603620001f7578280620001f39062001db0565b9350505b8080620002049062001db0565b91505062000165565b5060008267ffffffffffffffff8111156200022d576200022c62001b99565b5b6040519080825280602002602001820160405280156200026a57816020015b620002566200179d565b8152602001906001900390816200024c5790505b50905060005b84811015620004e1573373ffffffffffffffffffffffffffffffffffffffff1660016000600184620002a3919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603620004cb5760006001600060018462000306919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620003599062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620003879062001e2c565b8015620003d85780601f10620003ac57610100808354040283529160200191620003d8565b820191906000526020600020905b815481529060010190602001808311620003ba57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050848681518110620004ad57620004ac62001e61565b5b60200260200101819052508480620004c59062001db0565b95505050505b8080620004d89062001db0565b91505062000270565b508094505050505090565b620004f66200179d565b600160008381526020019081526020016000206040518060a001604052908160008201548152602001600182018054620005309062001e2c565b80601f01602080910402602001604051908101604052809291908181526020018280546200055e9062001e2c565b8015620005af5780601f106200058357610100808354040283529160200191620005af565b820191906000526020600020905b8154815290600101906020018083116200059157829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815250509050919050565b62000681600062001787565b60006200068f600062001779565b905060008333604051620006a390620017f8565b620006b092919062001eb2565b604051809103906000f080158015620006cd573d6000803e3d6000fd5b509050600081905082600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506040518060a001604052808481526020018581526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681525060016000858152602001908152602001600020600082015181600001556020820151816001019081620007a09190620020b1565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050508073ffffffffffffffffffffffffffffffffffffffff1684604051620008639190620021da565b6040518091039020847fb73455ab16c531227fefe356fe92298e4c03c6f04856bc7a10c8bfd46b72319933896040516200089f929190620021f3565b60405180910390a45050505050565b60606000620008be600062001779565b9050600080806000905060005b8481101562000a3d57600060016000600184620008e9919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098f91906200225d565b93503373ffffffffffffffffffffffffffffffffffffffff1660016000600185620009bb919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000a0f575083155b1562000a2657848062000a229062001db0565b9550505b50808062000a349062001db0565b915050620008cb565b5060008367ffffffffffffffff81111562000a5d5762000a5c62001b99565b5b60405190808252806020026020018201604052801562000a9a57816020015b62000a866200179d565b81526020019060019003908162000a7c5790505b50905060005b8581101562000ddb5760006001600060018462000abe919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6491906200225d565b94503373ffffffffffffffffffffffffffffffffffffffff166001600060018562000b90919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000be4575084155b1562000dc45760006001600060018562000bff919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a00160405290816000820154815260200160018201805462000c529062001e2c565b80601f016020809104026020016040519081016040528092919081815260200182805462000c809062001e2c565b801562000cd15780601f1062000ca55761010080835404028352916020019162000cd1565b820191906000526020600020905b81548152906001019060200180831162000cb357829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152505085878151811062000da65762000da562001e61565b5b6020026020010181905250858062000dbe9062001db0565b96505050505b50808062000dd29062001db0565b91505062000aa0565b50809550505050505090565b6060600062000df7600062001779565b9050600080806000905060005b8481101562000f755760006001600060018462000e22919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000ea2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec891906200225d565b93503373ffffffffffffffffffffffffffffffffffffffff166001600060018562000ef4919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000f475750835b1562000f5e57848062000f5a9062001db0565b9550505b50808062000f6c9062001db0565b91505062000e04565b5060008367ffffffffffffffff81111562000f955762000f9462001b99565b5b60405190808252806020026020018201604052801562000fd257816020015b62000fbe6200179d565b81526020019060019003908162000fb45790505b50905060005b85811015620013125760006001600060018462000ff6919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200109c91906200225d565b94503373ffffffffffffffffffffffffffffffffffffffff1660016000600185620010c8919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156200111b5750845b15620012fb5760006001600060018562001136919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620011899062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620011b79062001e2c565b8015620012085780601f10620011dc5761010080835404028352916020019162001208565b820191906000526020600020905b815481529060010190602001808311620011ea57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050858781518110620012dd57620012dc62001e61565b5b60200260200101819052508580620012f59062001db0565b96505050505b508080620013099062001db0565b91505062000fd8565b50809550505050505090565b606060006200132e600062001779565b905060008080600090505b838110156200142e5760006001600060018462001357919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa158015620013d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013fd91906200225d565b9250821562001417578380620014139062001db0565b9450505b508080620014259062001db0565b91505062001339565b506000826200143e600062001779565b6200144a91906200228f565b90506000808267ffffffffffffffff8111156200146c576200146b62001b99565b5b604051908082528060200260200182016040528015620014a957816020015b620014956200179d565b8152602001906001900390816200148b5790505b50905060005b868110156200176c57600060016000600184620014cd919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200154d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200157391906200225d565b955085620017555760006001600060018562001590919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620015e39062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620016119062001e2c565b8015620016625780601f10620016365761010080835404028352916020019162001662565b820191906000526020600020905b8154815290600101906020018083116200164457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152505085878151811062001737576200173662001e61565b5b602002602001018190525085806200174f9062001db0565b96505050505b508080620017639062001db0565b915050620014af565b5080965050505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060a001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b61091880620022cb83390190565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b620018478162001832565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620018895780820151818401526020810190506200186c565b60008484015250505050565b6000601f19601f8301169050919050565b6000620018b3826200184d565b620018bf818562001858565b9350620018d181856020860162001869565b620018dc8162001895565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200191482620018e7565b9050919050565b620019268162001907565b82525050565b600060a0830160008301516200194660008601826200183c565b5060208301518482036020860152620019608282620018a6565b91505060408301516200197760408601826200191b565b5060608301516200198c60608601826200191b565b506080830151620019a160808601826200183c565b508091505092915050565b6000620019ba83836200192c565b905092915050565b6000602082019050919050565b6000620019dc8262001806565b620019e8818562001811565b935083602082028501620019fc8562001822565b8060005b8581101562001a3e578484038952815162001a1c8582620019ac565b945062001a2983620019c2565b925060208a0199505060018101905062001a00565b50829750879550505050505092915050565b6000602082019050818103600083015262001a6c8184620019cf565b905092915050565b6000604051905090565b600080fd5b600080fd5b62001a938162001832565b811462001a9f57600080fd5b50565b60008135905062001ab38162001a88565b92915050565b60006020828403121562001ad25762001ad162001a7e565b5b600062001ae28482850162001aa2565b91505092915050565b600060a08301600083015162001b0560008601826200183c565b506020830151848203602086015262001b1f8282620018a6565b915050604083015162001b3660408601826200191b565b50606083015162001b4b60608601826200191b565b50608083015162001b6060808601826200183c565b508091505092915050565b6000602082019050818103600083015262001b87818462001aeb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62001bd38262001895565b810181811067ffffffffffffffff8211171562001bf55762001bf462001b99565b5b80604052505050565b600062001c0a62001a74565b905062001c18828262001bc8565b919050565b600067ffffffffffffffff82111562001c3b5762001c3a62001b99565b5b62001c468262001895565b9050602081019050919050565b82818337600083830152505050565b600062001c7962001c738462001c1d565b62001bfe565b90508281526020810184848401111562001c985762001c9762001b94565b5b62001ca584828562001c53565b509392505050565b600082601f83011262001cc55762001cc462001b8f565b5b813562001cd784826020860162001c62565b91505092915050565b6000806040838503121562001cfa5762001cf962001a7e565b5b600062001d0a8582860162001aa2565b925050602083013567ffffffffffffffff81111562001d2e5762001d2d62001a83565b5b62001d3c8582860162001cad565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001d828262001832565b915062001d8f8362001832565b925082820190508082111562001daa5762001da962001d46565b5b92915050565b600062001dbd8262001832565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001df25762001df162001d46565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062001e4557607f821691505b60208210810362001e5b5762001e5a62001dfd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b62001e9b8162001832565b82525050565b62001eac8162001907565b82525050565b600060408201905062001ec9600083018562001e90565b62001ed8602083018462001ea1565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262001f437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262001f04565b62001f4f868362001f04565b95508019841693508086168417925050509392505050565b6000819050919050565b600062001f9262001f8c62001f868462001832565b62001f67565b62001832565b9050919050565b6000819050919050565b62001fae8362001f71565b62001fc662001fbd8262001f99565b84845462001f11565b825550505050565b600090565b62001fdd62001fce565b62001fea81848462001fa3565b505050565b5b8181101562002012576200200660008262001fd3565b60018101905062001ff0565b5050565b601f82111562002061576200202b8162001edf565b620020368462001ef4565b8101602085101562002046578190505b6200205e620020558562001ef4565b83018262001fef565b50505b505050565b600082821c905092915050565b6000620020866000198460080262002066565b1980831691505092915050565b6000620020a1838362002073565b9150826002028217905092915050565b620020bc826200184d565b67ffffffffffffffff811115620020d857620020d762001b99565b5b620020e4825462001e2c565b620020f182828562002016565b600060209050601f83116001811462002129576000841562002114578287015190505b62002120858262002093565b86555062002190565b601f198416620021398662001edf565b60005b8281101562002163578489015182556001820191506020850194506020810190506200213c565b868310156200218357848901516200217f601f89168262002073565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000620021b0826200184d565b620021bc818562002198565b9350620021ce81856020860162001869565b80840191505092915050565b6000620021e88284620021a3565b915081905092915050565b60006040820190506200220a600083018562001ea1565b62002219602083018462001e90565b9392505050565b60008115159050919050565b620022378162002220565b81146200224357600080fd5b50565b60008151905062002257816200222c565b92915050565b60006020828403121562002276576200227562001a7e565b5b6000620022868482850162002246565b91505092915050565b60006200229c8262001832565b9150620022a98362001832565b9250828203905081811115620022c457620022c362001d46565b5b9291505056fe60a060405234801561001057600080fd5b506040516109183803806109188339818101604052810190610032919061013d565b816080818152505060008060006101000a81548160ff021916908315150217905550600060018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061017d565b600080fd5b6000819050919050565b6100bc816100a9565b81146100c757600080fd5b50565b6000815190506100d9816100b3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010a826100df565b9050919050565b61011a816100ff565b811461012557600080fd5b50565b60008151905061013781610111565b92915050565b60008060408385031215610154576101536100a4565b5b6000610162858286016100ca565b925050602061017385828601610128565b9150509250929050565b60805161077961019f600039600081816104da015261053401526107796000f3fe60806040526004361061007f5760003560e01c80637b0b33021161004e5780637b0b330214610142578063893d20e81461017f578063b692c89d146101aa578063ed88c68e146101d55761008e565b806312065fe0146100985780631b8df586146100c357806321eff7fc146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610258565b6040516100ba919061058f565b60405180910390f35b3480156100cf57600080fd5b506100d8610260565b6040516100e591906105c5565b60405180910390f35b3480156100fa57600080fd5b5061011560048036038101906101109190610643565b610276565b604051610122919061058f565b60405180910390f35b34801561013757600080fd5b506101406102bf565b005b34801561014e57600080fd5b5061016960048036038101906101649190610643565b610448565b60405161017691906105c5565b60405180910390f35b34801561018b57600080fd5b506101946104a4565b6040516101a1919061067f565b60405180910390f35b3480156101b657600080fd5b506101bf6104ce565b6040516101cc919061058f565b60405180910390f35b6101dd6101df565b005b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461022e91906106c9565b92505081905550346001600082825461024791906106c9565b925050819055506102566104d8565b565b600047905090565b60008060009054906101000a900460ff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610346576040517fb5f04f8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004703610380576040517f6c1bf99400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516103c89061072e565b60006040518083038185875af1925050503d8060008114610405576040519150601f19603f3d011682016040523d82523d6000602084013e61040a565b606091505b5050905080610445576040517f680d502c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561049a576001905061049f565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b7f0000000000000000000000000000000000000000000000000000000000000000471015610532576040517fc04a73d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000047106105745760016000806101000a81548160ff0219169083151502179055505b565b6000819050919050565b61058981610576565b82525050565b60006020820190506105a46000830184610580565b92915050565b60008115159050919050565b6105bf816105aa565b82525050565b60006020820190506105da60008301846105b6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610610826105e5565b9050919050565b61062081610605565b811461062b57600080fd5b50565b60008135905061063d81610617565b92915050565b600060208284031215610659576106586105e0565b5b60006106678482850161062e565b91505092915050565b61067981610605565b82525050565b60006020820190506106946000830184610670565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106d482610576565b91506106df83610576565b92508282019050808211156106f7576106f661069a565b5b92915050565b600081905092915050565b50565b60006107186000836106fd565b915061072382610708565b600082019050919050565b60006107398261070b565b915081905091905056fea2646970667358221220497ef5daba49dddc721f8bb02e594a34326b50ba5b3baf075f7b2a1d8168685064736f6c63430008120033a26469706673582212203a23131c2ac208cc4ab4cad18dfb4bc47022bb227a2f9c374d100598d2d7d09b64736f6c63430008120033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80632ede90fb146200006f5780636ec3db8214620000915780639f2c113b14620000c7578063d7f2013f14620000e7578063e9a0bfcb1462000109578063f6ceedaf146200012b575b600080fd5b620000796200014d565b60405162000088919062001a50565b60405180910390f35b620000af6004803603810190620000a9919062001ab9565b620004ec565b604051620000be919062001b6b565b60405180910390f35b620000e56004803603810190620000df919062001ce0565b62000675565b005b620000f1620008ae565b60405162000100919062001a50565b60405180910390f35b6200011362000de7565b60405162000122919062001a50565b60405180910390f35b620001356200131e565b60405162000144919062001a50565b60405180910390f35b606060006200015d600062001779565b905060008060005b838110156200020d573373ffffffffffffffffffffffffffffffffffffffff166001600060018462000198919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603620001f7578280620001f39062001db0565b9350505b8080620002049062001db0565b91505062000165565b5060008267ffffffffffffffff8111156200022d576200022c62001b99565b5b6040519080825280602002602001820160405280156200026a57816020015b620002566200179d565b8152602001906001900390816200024c5790505b50905060005b84811015620004e1573373ffffffffffffffffffffffffffffffffffffffff1660016000600184620002a3919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603620004cb5760006001600060018462000306919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620003599062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620003879062001e2c565b8015620003d85780601f10620003ac57610100808354040283529160200191620003d8565b820191906000526020600020905b815481529060010190602001808311620003ba57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050848681518110620004ad57620004ac62001e61565b5b60200260200101819052508480620004c59062001db0565b95505050505b8080620004d89062001db0565b91505062000270565b508094505050505090565b620004f66200179d565b600160008381526020019081526020016000206040518060a001604052908160008201548152602001600182018054620005309062001e2c565b80601f01602080910402602001604051908101604052809291908181526020018280546200055e9062001e2c565b8015620005af5780601f106200058357610100808354040283529160200191620005af565b820191906000526020600020905b8154815290600101906020018083116200059157829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815250509050919050565b62000681600062001787565b60006200068f600062001779565b905060008333604051620006a390620017f8565b620006b092919062001eb2565b604051809103906000f080158015620006cd573d6000803e3d6000fd5b509050600081905082600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506040518060a001604052808481526020018581526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681525060016000858152602001908152602001600020600082015181600001556020820151816001019081620007a09190620020b1565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050508073ffffffffffffffffffffffffffffffffffffffff1684604051620008639190620021da565b6040518091039020847fb73455ab16c531227fefe356fe92298e4c03c6f04856bc7a10c8bfd46b72319933896040516200089f929190620021f3565b60405180910390a45050505050565b60606000620008be600062001779565b9050600080806000905060005b8481101562000a3d57600060016000600184620008e9919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200098f91906200225d565b93503373ffffffffffffffffffffffffffffffffffffffff1660016000600185620009bb919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000a0f575083155b1562000a2657848062000a229062001db0565b9550505b50808062000a349062001db0565b915050620008cb565b5060008367ffffffffffffffff81111562000a5d5762000a5c62001b99565b5b60405190808252806020026020018201604052801562000a9a57816020015b62000a866200179d565b81526020019060019003908162000a7c5790505b50905060005b8581101562000ddb5760006001600060018462000abe919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6491906200225d565b94503373ffffffffffffffffffffffffffffffffffffffff166001600060018562000b90919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000be4575084155b1562000dc45760006001600060018562000bff919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a00160405290816000820154815260200160018201805462000c529062001e2c565b80601f016020809104026020016040519081016040528092919081815260200182805462000c809062001e2c565b801562000cd15780601f1062000ca55761010080835404028352916020019162000cd1565b820191906000526020600020905b81548152906001019060200180831162000cb357829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152505085878151811062000da65762000da562001e61565b5b6020026020010181905250858062000dbe9062001db0565b96505050505b50808062000dd29062001db0565b91505062000aa0565b50809550505050505090565b6060600062000df7600062001779565b9050600080806000905060005b8481101562000f755760006001600060018462000e22919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000ea2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec891906200225d565b93503373ffffffffffffffffffffffffffffffffffffffff166001600060018562000ef4919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801562000f475750835b1562000f5e57848062000f5a9062001db0565b9550505b50808062000f6c9062001db0565b91505062000e04565b5060008367ffffffffffffffff81111562000f955762000f9462001b99565b5b60405190808252806020026020018201604052801562000fd257816020015b62000fbe6200179d565b81526020019060019003908162000fb45790505b50905060005b85811015620013125760006001600060018462000ff6919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200109c91906200225d565b94503373ffffffffffffffffffffffffffffffffffffffff1660016000600185620010c8919062001d75565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156200111b5750845b15620012fb5760006001600060018562001136919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620011899062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620011b79062001e2c565b8015620012085780601f10620011dc5761010080835404028352916020019162001208565b820191906000526020600020905b815481529060010190602001808311620011ea57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050858781518110620012dd57620012dc62001e61565b5b60200260200101819052508580620012f59062001db0565b96505050505b508080620013099062001db0565b91505062000fd8565b50809550505050505090565b606060006200132e600062001779565b905060008080600090505b838110156200142e5760006001600060018462001357919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa158015620013d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013fd91906200225d565b9250821562001417578380620014139062001db0565b9450505b508080620014259062001db0565b91505062001339565b506000826200143e600062001779565b6200144a91906200228f565b90506000808267ffffffffffffffff8111156200146c576200146b62001b99565b5b604051908082528060200260200182016040528015620014a957816020015b620014956200179d565b8152602001906001900390816200148b5790505b50905060005b868110156200176c57600060016000600184620014cd919062001d75565b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16631b8df5866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200154d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200157391906200225d565b955085620017555760006001600060018562001590919062001d75565b81526020019081526020016000206000015490506000600160008381526020019081526020016000209050806040518060a001604052908160008201548152602001600182018054620015e39062001e2c565b80601f0160208091040260200160405190810160405280929190818152602001828054620016119062001e2c565b8015620016625780601f10620016365761010080835404028352916020019162001662565b820191906000526020600020905b8154815290600101906020018083116200164457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152505085878151811062001737576200173662001e61565b5b602002602001018190525085806200174f9062001db0565b96505050505b508080620017639062001db0565b915050620014af565b5080965050505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060a001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b61091880620022cb83390190565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b620018478162001832565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620018895780820151818401526020810190506200186c565b60008484015250505050565b6000601f19601f8301169050919050565b6000620018b3826200184d565b620018bf818562001858565b9350620018d181856020860162001869565b620018dc8162001895565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200191482620018e7565b9050919050565b620019268162001907565b82525050565b600060a0830160008301516200194660008601826200183c565b5060208301518482036020860152620019608282620018a6565b91505060408301516200197760408601826200191b565b5060608301516200198c60608601826200191b565b506080830151620019a160808601826200183c565b508091505092915050565b6000620019ba83836200192c565b905092915050565b6000602082019050919050565b6000620019dc8262001806565b620019e8818562001811565b935083602082028501620019fc8562001822565b8060005b8581101562001a3e578484038952815162001a1c8582620019ac565b945062001a2983620019c2565b925060208a0199505060018101905062001a00565b50829750879550505050505092915050565b6000602082019050818103600083015262001a6c8184620019cf565b905092915050565b6000604051905090565b600080fd5b600080fd5b62001a938162001832565b811462001a9f57600080fd5b50565b60008135905062001ab38162001a88565b92915050565b60006020828403121562001ad25762001ad162001a7e565b5b600062001ae28482850162001aa2565b91505092915050565b600060a08301600083015162001b0560008601826200183c565b506020830151848203602086015262001b1f8282620018a6565b915050604083015162001b3660408601826200191b565b50606083015162001b4b60608601826200191b565b50608083015162001b6060808601826200183c565b508091505092915050565b6000602082019050818103600083015262001b87818462001aeb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62001bd38262001895565b810181811067ffffffffffffffff8211171562001bf55762001bf462001b99565b5b80604052505050565b600062001c0a62001a74565b905062001c18828262001bc8565b919050565b600067ffffffffffffffff82111562001c3b5762001c3a62001b99565b5b62001c468262001895565b9050602081019050919050565b82818337600083830152505050565b600062001c7962001c738462001c1d565b62001bfe565b90508281526020810184848401111562001c985762001c9762001b94565b5b62001ca584828562001c53565b509392505050565b600082601f83011262001cc55762001cc462001b8f565b5b813562001cd784826020860162001c62565b91505092915050565b6000806040838503121562001cfa5762001cf962001a7e565b5b600062001d0a8582860162001aa2565b925050602083013567ffffffffffffffff81111562001d2e5762001d2d62001a83565b5b62001d3c8582860162001cad565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001d828262001832565b915062001d8f8362001832565b925082820190508082111562001daa5762001da962001d46565b5b92915050565b600062001dbd8262001832565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001df25762001df162001d46565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062001e4557607f821691505b60208210810362001e5b5762001e5a62001dfd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b62001e9b8162001832565b82525050565b62001eac8162001907565b82525050565b600060408201905062001ec9600083018562001e90565b62001ed8602083018462001ea1565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262001f437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262001f04565b62001f4f868362001f04565b95508019841693508086168417925050509392505050565b6000819050919050565b600062001f9262001f8c62001f868462001832565b62001f67565b62001832565b9050919050565b6000819050919050565b62001fae8362001f71565b62001fc662001fbd8262001f99565b84845462001f11565b825550505050565b600090565b62001fdd62001fce565b62001fea81848462001fa3565b505050565b5b8181101562002012576200200660008262001fd3565b60018101905062001ff0565b5050565b601f82111562002061576200202b8162001edf565b620020368462001ef4565b8101602085101562002046578190505b6200205e620020558562001ef4565b83018262001fef565b50505b505050565b600082821c905092915050565b6000620020866000198460080262002066565b1980831691505092915050565b6000620020a1838362002073565b9150826002028217905092915050565b620020bc826200184d565b67ffffffffffffffff811115620020d857620020d762001b99565b5b620020e4825462001e2c565b620020f182828562002016565b600060209050601f83116001811462002129576000841562002114578287015190505b62002120858262002093565b86555062002190565b601f198416620021398662001edf565b60005b8281101562002163578489015182556001820191506020850194506020810190506200213c565b868310156200218357848901516200217f601f89168262002073565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b6000620021b0826200184d565b620021bc818562002198565b9350620021ce81856020860162001869565b80840191505092915050565b6000620021e88284620021a3565b915081905092915050565b60006040820190506200220a600083018562001ea1565b62002219602083018462001e90565b9392505050565b60008115159050919050565b620022378162002220565b81146200224357600080fd5b50565b60008151905062002257816200222c565b92915050565b60006020828403121562002276576200227562001a7e565b5b6000620022868482850162002246565b91505092915050565b60006200229c8262001832565b9150620022a98362001832565b9250828203905081811115620022c457620022c362001d46565b5b9291505056fe60a060405234801561001057600080fd5b506040516109183803806109188339818101604052810190610032919061013d565b816080818152505060008060006101000a81548160ff021916908315150217905550600060018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061017d565b600080fd5b6000819050919050565b6100bc816100a9565b81146100c757600080fd5b50565b6000815190506100d9816100b3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061010a826100df565b9050919050565b61011a816100ff565b811461012557600080fd5b50565b60008151905061013781610111565b92915050565b60008060408385031215610154576101536100a4565b5b6000610162858286016100ca565b925050602061017385828601610128565b9150509250929050565b60805161077961019f600039600081816104da015261053401526107796000f3fe60806040526004361061007f5760003560e01c80637b0b33021161004e5780637b0b330214610142578063893d20e81461017f578063b692c89d146101aa578063ed88c68e146101d55761008e565b806312065fe0146100985780631b8df586146100c357806321eff7fc146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610258565b6040516100ba919061058f565b60405180910390f35b3480156100cf57600080fd5b506100d8610260565b6040516100e591906105c5565b60405180910390f35b3480156100fa57600080fd5b5061011560048036038101906101109190610643565b610276565b604051610122919061058f565b60405180910390f35b34801561013757600080fd5b506101406102bf565b005b34801561014e57600080fd5b5061016960048036038101906101649190610643565b610448565b60405161017691906105c5565b60405180910390f35b34801561018b57600080fd5b506101946104a4565b6040516101a1919061067f565b60405180910390f35b3480156101b657600080fd5b506101bf6104ce565b6040516101cc919061058f565b60405180910390f35b6101dd6101df565b005b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461022e91906106c9565b92505081905550346001600082825461024791906106c9565b925050819055506102566104d8565b565b600047905090565b60008060009054906101000a900460ff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610346576040517fb5f04f8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60004703610380576040517f6c1bf99400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516103c89061072e565b60006040518083038185875af1925050503d8060008114610405576040519150601f19603f3d011682016040523d82523d6000602084013e61040a565b606091505b5050905080610445576040517f680d502c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561049a576001905061049f565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b7f0000000000000000000000000000000000000000000000000000000000000000471015610532576040517fc04a73d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000047106105745760016000806101000a81548160ff0219169083151502179055505b565b6000819050919050565b61058981610576565b82525050565b60006020820190506105a46000830184610580565b92915050565b60008115159050919050565b6105bf816105aa565b82525050565b60006020820190506105da60008301846105b6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610610826105e5565b9050919050565b61062081610605565b811461062b57600080fd5b50565b60008135905061063d81610617565b92915050565b600060208284031215610659576106586105e0565b5b60006106678482850161062e565b91505092915050565b61067981610605565b82525050565b60006020820190506106946000830184610670565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106d482610576565b91506106df83610576565b92508282019050808211156106f7576106f661069a565b5b92915050565b600081905092915050565b50565b60006107186000836106fd565b915061072382610708565b600082019050919050565b60006107398261070b565b915081905091905056fea2646970667358221220497ef5daba49dddc721f8bb02e594a34326b50ba5b3baf075f7b2a1d8168685064736f6c63430008120033a26469706673582212203a23131c2ac208cc4ab4cad18dfb4bc47022bb227a2f9c374d100598d2d7d09b64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 316,
        "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
        "label": "_funraiserIds",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)5_storage"
      },
      {
        "astId": 332,
        "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
        "label": "s_idToCrowdfund",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(CrowdfundObj)327_storage)"
      },
      {
        "astId": 336,
        "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
        "label": "s_addressToId",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(CrowdfundObj)327_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CrowdfundMarket.CrowdfundObj)",
        "numberOfBytes": "32",
        "value": "t_struct(CrowdfundObj)327_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)5_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(CrowdfundObj)327_storage": {
        "encoding": "inplace",
        "label": "struct CrowdfundMarket.CrowdfundObj",
        "members": [
          {
            "astId": 318,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "fundId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 320,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "metaUrl",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 322,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "crowdfundContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 324,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 326,
            "contract": "contracts/CrowdfundMarket.sol:CrowdfundMarket",
            "label": "goal",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}